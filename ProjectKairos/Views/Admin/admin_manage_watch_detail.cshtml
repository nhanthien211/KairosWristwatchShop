@model ProjectKairos.ViewModel.ManageWatchDetailViewModel

@{
    ViewBag.Title = "Watch Detail";

    ViewBag.Info = "";
    ViewBag.Account = "";
    ViewBag.Order = "";
    ViewBag.Watch = "active";

    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@section ckeditor
{
    @Scripts.Render("~/bundles/ckeditor");
}

@section scripts
{
    <script type="text/javascript">
        var file = document.getElementById('inputGroupFile01');
        file.value = '';
        file.onchange = function (e) {
            $('#fileUploadResult').removeClass();
            var fileExtension = this.value.match(/\.([^\.]+)$/)[1];
            fileExtension = fileExtension.toLowerCase();
            if (fileExtension === 'png' || fileExtension === 'jpg' || fileExtension === 'jpeg') {
                var size = file.files[0].size;
                if (size > 512000) {
                    //bigger than 500kb, too much for a thumbnail
                    $(this).next().after().text('Choose File');
                    $('#fileUploadResult').addClass('text-danger');
                    $('#fileUploadResult').html('Uploaded file must be under 500KB <br/>');
                    this.value = '';
                    document.getElementById('imagePreview').src = '';
                    return;
                }
                $(this).next().after().text($(this).val().split('\\').slice(-1)[0]);
                $('#fileUploadResult').addClass('text-success');
                $('#fileUploadResult').html('Success');
                document.getElementById('imagePreview').src = window.URL.createObjectURL(file.files[0]);
            } else {
                $(this).next().after().text('Choose File');
                $('#fileUploadResult').addClass('text-danger');
                $('#fileUploadResult').html('Only .jpg .jpeg and .png is supported');
                this.value = '';
                document.getElementById('imagePreview').src = '';
            }

        };

        function clearFileError() {


            if (document.getElementById('imagePreview').getAttribute('src') == '') {
                $('#fileUploadResult').html('Thumbnail is required');
                return false;
            }
            var text = CKEDITOR.instances.editor1.getData();
            text = CKEDITOR.tools.htmlEncode(text);
            $('#hiddenEditorValue').val(text);
            return true;
        }
    </script>
}

<div id="successModal" class="modal fade">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header">
                <div class="icon-box">
                    <i class="fas fa-check"></i>
                </div>
                <h4 class="modal-title">Success!</h4>
            </div>
            <div class="modal-body">
                <p class="text-center">Watch Updated Successfully.</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success btn-block" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>



<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("ManageWatch", "Admin")">Watch Management</a>
        </li>
        <li class="breadcrumb-item active">Watch Details</li>
    </ol>

    <!-- DataTables Card-->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fa fa-fw fa-sliders-h "></i> View Watch Details
        </div>
        <div class="card-body">
            <!-- Form for update watch -->
            @using (Html.BeginForm("EditWatch", "Admin", new { watchId = @Model.WatchId }, FormMethod.Post, new { @class = "to-validate", enctype = "multipart/form-data", novalidate = "", onsubmit = "return clearFileError()" }))
            {
                <div class="row for-input-row" style="font-weight: bold">

                    <div class="col-sm-12">

                        <label for="WatchName">Watch Name (*)</label>
                        <input class="form-control form-control-sm" type="text" name="WatchCode" value="@Model.WatchCode" pattern="[A-Za-z0-9-]{1,}" required>
                        <div class="invalid-feedback" style="font-size: 15px;">
                            Name required and does not contains special characters!
                        </div>
                        <div class="text-danger">@Model.DuplicateErrorMessage</div>

                    </div>
                </div>

                <div class="row for-input-row" style="font-weight: bold; margin-bottom: 50px;">
                    <div class="col-sm-12 custom-file" novalidate>
                        <label for="Thumbnail">Thumbnail (*)</label>
                        <div class="custom-file" lang="es">

                            <input type="file" name="thumbnail" class="custom-file-input" id="inputGroupFile01" accept="image/*" value="">
                            <label style="border-color: #ccc !important" class="custom-file-label" for="inputGroupFile01">Choose file</label>
                            <div id="fileUploadResult"></div>
                        </div>
                    </div>                
                </div>
                <br/>
                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-12">
                        <img alt="" src="@Model.Thumbnail" id="imagePreview" style="width: 100px;height: auto" />
                    </div>

                </div>
                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-6">
                        <label for="Quantity">Quantity (*)</label>
                        <input class="form-control form-control-sm" type="number" name="Quantity" value="@Model.Quantity" min="0" step="1" required>
                        <div class="invalid-feedback" style="font-size: 15px;">
                            Quantity required and must be positive!
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <label for="NameID">Price ($) (*)</label>
                        <input class="form-control form-control-sm" type="number" name="Price" value="@Model.Price" min="1" step="0.01" required>
                        <div class="invalid-feedback" style="font-size: 15px;">
                            Price required and must be positive!
                        </div>
                    </div>
                </div>

                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-12">
                        <label for="WatchDescription">Watch Description</label>
                        <br>
                        <input type="hidden" name="WatchDescription" value="" id="hiddenEditorValue" />
                        <textarea name="description" id="editor1" rows="10" cols="80">
                            @Html.Raw(HttpUtility.HtmlDecode(Model.WatchDescription))
                        </textarea>
                        <script>
                            CKEDITOR.replace('editor1', {
                                htmlEncodeOutput: true
                            });
                        </script>
                    </div>
                </div>


                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-6">
                        <label for="Movement">Movement</label>
                        <select name="MovementID" class="custom-select">
                            @foreach (var movement in Model.Movement)
                            {
                                string selected = "";
                                if (movement.MovementID == Model.MovementId)
                                {
                                    selected = "selected";
                                }
                                <option value="@movement.MovementID" @selected>@movement.MovementName</option>
                            }
                        </select>
                    </div>
                    <div class="col-sm-6">
                        <label for="Model">Model</label>
                        <select name="ModelID" class="custom-select">
                            <!-- type of movement -->
                            @foreach (var watchModel in Model.WatchModel)
                            {
                                string selected = "";
                                if (watchModel.ModelID == Model.MovementId)
                                {
                                    selected = "selected";
                                }
                                <option value="@watchModel.ModelID" @selected>@watchModel.ModelName</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <label for="Water">Water Resistant</label>
                        <br>
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-secondary radio-config @Model.WaterEnableLabel">
                                <input type="radio" name="water" value="yes" autocomplete="off" @Model.WaterEnable> Yes
                            </label>
                            <label class="btn btn-secondary radio-config @Model.WaterDisableLabel">
                                <input type="radio" name="water" value="no" autocomplete="off" @Model.WaterDisable> No
                            </label>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <label for="LED">LED Light</label>
                        <br>

                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-secondary radio-config @Model.LedEnableLabel">
                                <input type="radio" name="led" value="yes" autocomplete="off" @Model.LedEnable> Yes
                            </label>
                            <label class="btn btn-secondary radio-config @Model.LedDisableLabel">
                                <input type="radio" name="led" value="no" autocomplete="off" @Model.LedDisable> No
                            </label>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <label for="Alarm">Alarm</label>
                        <br>
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-secondary radio-config @Model.AlarmEnableLabel">
                                <input type="radio" name="alarm" value="yes" autocomplete="off" @Model.AlarmEnable> Yes
                            </label>
                            <label class="btn btn-secondary radio-config @Model.AlarmDisableLabel">
                                <input type="radio" name="alarm" value="no" autocomplete="off" @Model.AlarmDisable> No
                            </label>
                        </div>
                    </div>

                    <div class="col-lg-3 col-md-6 col-sm-6">
                        <label for="Status">Status</label>
                        <br>
                        <div class="btn-group btn-group-toggle" data-toggle="buttons">
                            <label class="btn btn-secondary radio-config @Model.StatusEnableLabel">
                                <input type="radio" name="Status" value="yes" autocomplete="off" @Model.StatusEnable> Continue
                            </label>
                            <label class="btn btn-secondary radio-config @Model.StatusDisableLabel">
                                <input type="radio" name="Status" value="no" autocomplete="off" @Model.StatusDisable> Discontinue
                            </label>
                        </div>
                    </div>

                </div>

                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-12">
                        <label for="BandMaterial">Band Material</label>
                        <input class="form-control form-control-sm" type="text" name="BandMaterial" value="@Model.BandMaterial">
                    </div>
                </div>

                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-6">
                        <label for="CaseMaterial">Case Material</label>
                        <input class="form-control form-control-sm" type="text" name="CaseMaterial" value="@Model.CaseMaterial">
                    </div>
                    <div class="col-sm-6">
                        <label for="CaseRadius">Case Radius (mm)</label>
                        <input class="form-control form-control-sm" type="number" name="CaseRadius" value="@Model.CaseRadius" min="0" step="0.1">
                    </div>
                </div>

                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-6">
                        <label for="Discount">Discount (%)</label>
                        <input class="form-control form-control-sm" type="number" name="Discount" value="@Model.Discount" min="0" step="1">
                    </div>
                    <div class="col-sm-6">
                        <label for="Guarantee">Guarantee (Months)</label>
                        <input class="form-control form-control-sm" type="number" name="Guarantee" value="@Model.Guarantee" min="0" step="1">
                    </div>
                </div>

                <div class="row for-input-row" style="font-weight: bold">
                    <div class="col-sm-6">
                        <label for="PublishedDate">Published Time</label>
                        <input class="form-control form-control-sm" type="date" name="PublishedTime" value="@Model.PublishedTime.ToString("yyyy-MM-dd")" readonly>
                    </div>
                    <div class="col-sm-6">
                        <label for="PublishedBy">Published By</label>
                        <input class="form-control form-control-sm" type="text" name="PublishedBy" value="@Model.PublishedBy" readonly>
                    </div>
                </div>


                <div class="row for-input-row">
                    <div class="col-sm-12 col-lg-12 for-info-name">
                        <button type="submit" class="btn btn-outline-success" id="btn-add-watch">Save Changes</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


