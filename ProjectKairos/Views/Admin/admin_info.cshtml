
@model ProjectKairos.ViewModel.AccountInfoViewModel
@{
    string emailPattern = @"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[a-z]{2,4}$";
    ViewBag.Title = "Admin Information";

    ViewBag.Info = "active";
    ViewBag.Account = "";
    ViewBag.Order = "";
    ViewBag.Watch = "";

    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


        <div class="container-fluid">
            <!-- Breadcrumbs-->
            <ol class="breadcrumb">
                <li class="breadcrumb-item active">Account Information</li>
            </ol>

            <!-- Content-->
            <div class="card mb-3">
                <div class="card-header">
                    <i class="fa fa-fw fa-user "></i> Manage Account Info
                    <form action="#" class="form-inline" style="display: inline;" data-toggle="modal" data-target="#passwordModal">
                        <button class="btn btn-danger" type="submit" style="float: right;">Change Password</button>
                    </form>
                </div>
                <div class="card-body">
                    <!-- FORM CHỈNH SỬA: ======================================================= -->

                    @using (@Html.BeginForm("UpdateMyInfo", "Account", FormMethod.Post, new { @class = "to-validate", novalidate = "" }))
                    {
                        <!-- ROW FIRST - LAST NAME: required, 2-30 characters -->
                        <div class="row for-input-row" style="font-weight: bold">
                            <div class="col-sm-6">
                                <label for="FName">First Name *</label>
                                <input class="form-control form-control-sm" type="text" name="firstName" value="@Model.FirstName" required>
                                <div class="invalid-feedback" style="font-size: 15px;">
                                    Invalid First Name (2 - 30 characters)
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <label for="LName">Last Name *</label>
                                <input class="form-control form-control-sm" type="text" name="lastName" value="@Model.LastName" required>
                                <div class="invalid-feedback" style="font-size: 15px;">
                                    Invalid Last Name (2 - 30 characters)
                                </div>
                            </div>
                        </div>

                        <!-- ROW EMAIL: required, email@address.domain  - PHONE: empty OR 8-10 numbers -->
                        <div class="row for-input-row" style="font-weight: bold">
                            <div class="col-sm-6">
                                <label for="Email">Email *</label>
                                <input class="form-control form-control-sm" type="text" name="email" value="@Model.Email" required pattern="@emailPattern">
                                <div class="invalid-feedback" style="font-size: 15px;">
                                    Invalid Email (email@address.domain)
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <label for="Phone">Phone *</label>
                                <input class="form-control form-control-sm" type="text" name="phone" value="@Model.Phone" required pattern=".{8,11}[0-9]">
                                <div class="invalid-feedback" style="font-size: 15px;">
                                    Invalid Phone Number (8 - 11 numbers)
                                </div>
                            </div>
                        </div>

                        <!-- ROW DOB, can not exceed today - STARTED DATE: readonly -->
                        <div class="row for-input-row" style="font-weight: bold">
                            <div class="col-sm-6">
                                <label for="DOB">DOB</label>
                                <!-- set "date" value with format yyyy-MM-dd -->
                                @{
                                    string dob = "";
                                    if (Model.DOB.HasValue)
                                    {
                                        dob = Model.DOB.Value.ToString("yyyy-MM-dd");
                                    }
                                }
                                <input class="form-control form-control-sm" type="date" name="dob" value="@dob" id="validationCustom08">
                            </div>
                            <div class="col-sm-6">
                                <label for="StartedDate">Started Date</label>
                                <!-- set "date" value with format yyyy-MM-dd -->
                                <input class="form-control form-control-sm" type="date" name="startDate" value="@Model.StartedDate.ToString("yyyy-MM-dd")" readonly>
                            </div>
                        </div>

                        <!-- GENDER -->
                        <div class="row for-input-row" style="font-weight: bold">
                            <div class="col-sm-6">
                                <label for="Gender">Gender</label>
                                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                    <label class="btn btn-secondary @Model.maleLabel radio-config">
                                        <input type="radio" name="gender" value="male" id="option1" autocomplete="off" @Model.male> Male
                                    </label>
                                    <label class="btn btn-secondary @Model.femaleLabel radio-config">
                                        <input type="radio" name="gender" value="female" id="option2" autocomplete="off" @Model.female> Female
                                    </label>
                                </div>
                            </div>

                        </div>



                        <div class="row for-input-row">
                            <div class="col-sm-12 col-lg-12" style="text-align: right;">
                                <button type="submit" class="btn btn-outline-success">Save Changes</button>
                            </div>
                        </div>
                    }
                    <!-- END OF FORM ========================================================== -->
                </div>
            </div>
        </div>



        <div class="modal fade" id="passwordModal" tabindex="-1" role="dialog" aria-labelledby="passwordModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Change Password</h5>
                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- change password form ========================================================== -->

                        @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { onsubmit = "return check()" }))
                        {

                            <label for="password">Old Password</label>
                            
                            <input class="form-control form-control-sm" type="password" name="oldPassword" value="" required minLength="8">
                            <label for="password">New Password</label>
                            <input class="form-control form-control-sm" type="password" name="newPassword" id="password" value="" required onkeyup='check();' minLength="8">
                            <label for="password">Confirm Password</label>
                            <input class="form-control form-control-sm" type="password" name="confirmPassword" id="re-password" value="" required onkeyup='check();'>


                            if (TempData["UPDATE_RESULT"] != null)
                            {
                                string result = (string) TempData["UPDATE_RESULT"];
                                string style = "text-success";
                                if (result.Contains("incorrect"))
                                {
                                    style = "text-danger";
                                }
                                <div class="@style">@result</div>
                            }
                            <br>
                            <span id='message'></span>

                            <div class="modal-footer">
                                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-outline-success">Confirm</button>
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>
       
        

